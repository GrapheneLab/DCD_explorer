$breakpoints: (
  "xs": 450px,    //targeting <568px devices (e.g. all iPhones <6)
  "sm": 600px,  //targeting >=500px devices (e.g. iPhones >=6)
  "md": 900px,  //targeting >=768px tablets (e.g. portrait iPad)
  "lg": 1200px  //targeting >=1024px tablets (e.g. landscape iPad) and desktops but leaving room for the scroll bar
);

%col-params{
  padding: 0 10px;
  width: 100%;
  box-sizing: border-box;
}

.container{
  display: flex;
  flex-wrap: wrap;
  padding: 10px;
  margin: auto;
  width: 100%;
  max-width: 1200px;
}

.row{
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  margin: 0 -10px;
}

div{
  &::-webkit-scrollbar {
    position: absolute;
    top: 0;
    right: 0;
    width: .4rem;
    height: .4rem;
    background-color: $light_op;
  }
  &::-webkit-scrollbar-thumb {
    background: $ground;
    border-radius: 2px;
  }
}

@each $breakpoint, $value in $breakpoints{
  @for $i from 1 to 13{
    .col-#{$breakpoint}-#{$i}{
      @extend %col-params;
      @media (min-width: $value){
        width: percentage($i / 12);
      }
    }
  }
}

@mixin breakpoint($breakpoint, $orient: 'width'){
  @if $breakpoint == 'sm' {
    @media (max-width: (map-get($breakpoints, $breakpoint))), (max-height: (map-get($breakpoints, $breakpoint))) {
      @content;
    }
  } @else {
    @media (max-#{$orient}: (map-get($breakpoints, $breakpoint))) {
      @content;
    }
  }
};

@mixin multiple-breakpoint($breakpoint1, $orient1, $breakpoint2, $orient2){
  @media
  (max-#{$orient1}: (map-get($breakpoints, $breakpoint1))),
  (max-#{$orient2}: (map-get($breakpoints, $breakpoint2))) {
    @content;
  }
}
